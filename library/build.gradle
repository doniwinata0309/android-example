plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

group = 'com.github.jitpack'
version = '1.0'

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
}

def getArtifactFilePath(String domain) {
    return "$rootDir/" + domain + "/lib.jar"
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId GROUP
                version VERSION_NAME
                artifactId POM_ARTIFACT_ID
                artifact getArtifactFilePath(POM_ARTIFACT_ID)
                pom.licenses {
                    it.license {
                        it.name.set(LICENSE_NAME)
                        it.url.set(LICENSE_URL)

                    }
                }
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    configurations.implementation.allDependencies.each {
                        if (it.group != null && it.group != "unspecified" &&
                                it.name != null && it.name != "unspecified" &&
                                it.version != null && it.version != "unspecified") {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            dependencyNode.appendNode('scope', 'runtime')
                        }
                    }

                    configurations.api.allDependencies.each {
                        if (it.group != null && it.group != "unspecified" &&
                                it.name != null && it.name != "unspecified" &&
                                it.version != null && it.version != "unspecified") {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            dependencyNode.appendNode('scope', 'compile')
                        }
                    }
                }
            }
        }
    }
}
